/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as DealerRouteImport } from './routes/$dealer'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DealerDashboardRouteImport } from './routes/$dealer/dashboard'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const DealerRoute = DealerRouteImport.update({
  id: '/$dealer',
  path: '/$dealer',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DealerDashboardRoute = DealerDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DealerRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$dealer': typeof DealerRouteWithChildren
  '/about': typeof AboutRoute
  '/$dealer/dashboard': typeof DealerDashboardRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$dealer': typeof DealerRouteWithChildren
  '/about': typeof AboutRoute
  '/$dealer/dashboard': typeof DealerDashboardRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$dealer': typeof DealerRouteWithChildren
  '/about': typeof AboutRoute
  '/$dealer/dashboard': typeof DealerDashboardRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$dealer' | '/about' | '/$dealer/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$dealer' | '/about' | '/$dealer/dashboard'
  id: '__root__' | '/' | '/$dealer' | '/about' | '/$dealer/dashboard'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DealerRoute: typeof DealerRouteWithChildren
  AboutRoute: typeof AboutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$dealer': {
      id: '/$dealer'
      path: '/$dealer'
      fullPath: '/$dealer'
      preLoaderRoute: typeof DealerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$dealer/dashboard': {
      id: '/$dealer/dashboard'
      path: '/dashboard'
      fullPath: '/$dealer/dashboard'
      preLoaderRoute: typeof DealerDashboardRouteImport
      parentRoute: typeof DealerRoute
    }
  }
}

interface DealerRouteChildren {
  DealerDashboardRoute: typeof DealerDashboardRoute
}

const DealerRouteChildren: DealerRouteChildren = {
  DealerDashboardRoute: DealerDashboardRoute,
}

const DealerRouteWithChildren =
  DealerRoute._addFileChildren(DealerRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DealerRoute: DealerRouteWithChildren,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
